# Auto-generated file -- DO NOT EDIT!!!!!

# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

=head1 NAME

Lucy::Analysis::Normalizer - Unicode normalization, case folding and accent stripping

Normalizer is an L<Analyzer|Lucy::Analysis::Analyzer> which normalizes
tokens to one of the Unicode normalization forms.

=head1 SYNOPSIS

    my $normalizer = Lucy::Analysis::Normalizer->new;
    
    my $polyanalyzer = Lucy::Analysis::PolyAnalyzer->new(
        analyzers => [ $normalizer, $tokenizer, $stemmer ],
    );



=head1 DESCRIPTION

Optionally, it
performs Unicode case folding and converts accented characters to their
base character.

If you use highlighting, Normalizer should be run after tokenization
because it might add or remove characters.

=head1 CONSTRUCTORS

=head2 new( I<[labeled params]> )

    my $normalizer = Lucy::Analysis::Normalizer->new(
        normalization_form => 'NFKC',
        case_fold          => 1,
        strip_accents      => 0,
    );

=over

=item *

B<normalization_form> - Unicode normalization form, can be one of
'NFC', 'NFKC', 'NFD', 'NFKD'. Defaults to 'NFKC'.

=item *

B<case_fold> - Perform case folding, default is true.

=item *

B<strip_accents> - Strip accents, default is false.

=back







=head1 INHERITANCE

Lucy::Analysis::Normalizer isa L<Lucy::Analysis::Analyzer> isa L<Lucy::Object::Obj>.


=cut

