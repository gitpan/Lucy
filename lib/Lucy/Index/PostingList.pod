# Auto-generated file -- DO NOT EDIT!!!!!

# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

=head1 NAME

Lucy::Index::PostingList - Term-Document pairings.

=head1 SYNOPSIS

    my $posting_list_reader 
        = $seg_reader->obtain("Lucy::Index::PostingListReader");
    my $posting_list = $posting_list_reader->posting_list( 
        field => 'content',
        term  => 'foo',
    );
    while ( my $doc_id = $posting_list->next ) {
        say "Matching doc id: $doc_id";
    }



=head1 DESCRIPTION

PostingList is an iterator which supplies a list of document ids that match
a given term.

See L<Lucy::Docs::IRTheory> for definitions of "posting" and "posting
list".



=head1 ABSTRACT METHODS

=head2 next()

Proceed to the next doc id.

Returns: A positive doc id, or 0 once the iterator is exhausted.

=head2 get_doc_id()

Return the current doc id.  Valid only after a successful call to
next() or advance() and must not be called otherwise.

=head2 get_doc_freq()

Return the number of documents that the PostingList contains.  (This
number will include any documents which have been marked as deleted but
not yet purged.)

=head2 seek(target)

Prepare the PostingList object to iterate over matches for documents
that match C<< target >>.

=over

=item *

B<target> - The term to match.  If undef, the iterator will be empty.

=back

=head1 METHODS

=head2 advance(target)

Advance the iterator to the first doc id greater than or equal to
C<< target >>. The default implementation simply calls next()
over and over, but subclasses have the option of doing something more
efficient.

=over

=item *

B<target> - A positive doc id, which must be greater than the current
doc id once the iterator has been initialized.

=back

Returns: A positive doc id, or 0 once the iterator is exhausted.



=head1 INHERITANCE

Lucy::Index::PostingList isa L<Lucy::Search::Matcher> isa Clownfish::Obj.


=cut

